@model MoneyFlow.Models.ViewModels.TableViewModel<Motivation>;
@using MoneyFlow.Models;
@using MoneyFlow.Models.ViewModels;
@using MoneyFlow.Constants;

@{
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
    List<ModalViewModel<string>> modalDeleteList = new List<ModalViewModel<string>>();
    List<ModalViewModel<Motivation>> modalDetailList = new List<ModalViewModel<Motivation>>();
}

<h4 class="text-center my-3"><b>@ViewData["Title"]</b></h4>

<div class="d-flex align-items-center mt-2 mb-1">
    <div>Cari barang:</div>
    <div class="col d-flex flex-grow-1">
        <form action="@UriPath.MOTIVATIONS" method="get" class="d-flex flex-grow-1 mb-0">
            <input type="text" name="keyword" value="@ViewData["keyword"]" placeholder="Cari..." class="flex-grow-1 m-1">
            <button type="submit" class="btn btn-primary m-1"><i class="bi bi-search mr-1"></i>Cari</button>
        </form>
    </div>
    <div class="d-flex">
        <form action="@UriPath.MOTIVATIONS_CREATE" method="get" class="mb-0">
            <button type="submit" class="btn btn-success"><i class="bi bi-plus-lg mr-1"></i>Buat baru</button>
        </form>
    </div>
</div>

<div class="container">
    <div class="row justify-content-center align-middle">
        @foreach (Motivation motivation in Model.Data) 
        {
            string modalDeleteId = $"modalDelete{motivation.Id}";
            string modalDetailId = $"modalDetail{motivation.Id}";
            string targetImageUrl = $"{baseUrl}/file/image/{GeneralConstants.PURPOSE_MOTIVATIONS}/{motivation.TargetImage}";
            modalDeleteList.Add(new ModalViewModel<string>(
                modalDeleteId, $"/motivations/delete/{motivation.Id}", "hapus pengeluaran"
            )); 
            modalDetailList.Add(new ModalViewModel<Motivation>(
                modalDetailId, data: motivation
            ));
            <div class="card col-sm-3 m-2" style="border-radius: 25px; border-color: black;">
                <img class="card-img-top my-1" src="@targetImageUrl" style="height: 15rem; border-radius: 25px;">
                <div class="card-body" style="height: 11rem;">
                    <h5 class="card-title wrapped-title mt-2"><strong>@motivation.TargetName</strong></h5>
                    <div class="card-text mb-2"><strong>@Html.DisplayFor(modelItem => motivation.TargetPrice, "Money")</strong></div>
                    <div class="wrapped-content">
                        @motivation.Description
                    </div>
                </div>
                <div class="card-body">
                    <div class="container">
                        <div class="row align-middle justify-content-center">
                            <div class="d-flex align-items-center justify-content-center">
                                <button type="button" onclick="openModal('@modalDetailId')" class="btn btn-success">Detail</button>
                                <button type="button" onclick="openModal('@modalDeleteId')" class="btn btn-danger mx-2">Hapus</button>
                                <form action="/motivations/update/@motivation.Id" method="get" class="mb-0">
                                    <div class="form-group flex-grow-1 my-0">
                                        <input type="submit" value="Ubah" class="btn btn-primary" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>  
@if (Model.Data.Count == 0)
{
    @await Html.PartialAsync("~/Views/Shared/Components/EmptyDataView.cshtml");
} else
{
    @await Html.PartialAsync("~/Views/Shared/Components/PaginationView.cshtml", Model.PaginationView)

    <div class="d-flex justify-content-center align-items-center row row-cols-2 my-3">
        <a class="btn btn-primary" href="@baseUrl/file/generate-excel/motivations" download>
            <i class="bi bi-download"></i>
            Tabel Excel
        </a>
    </div>
    for (int i = 0; i < modalDetailList.Count; i++)
    {
        @await Html.PartialAsync("~/Views/Shared/Components/Modal/DeleteConfirmationModalView.cshtml", modalDeleteList[i]);
        @await Html.PartialAsync("~/Views/Motivation/DetailMotivationsModal.cshtml", modalDetailList[i]);
    }
}
