@model MoneyFlow.Models.TableViewModel<Expense>;
@using MoneyFlow.Models;
@using MoneyFlow.Data;
@using MoneyFlow.Constants;

@{
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
    List<ModalViewModel<string>> modalDeleteList = new List<ModalViewModel<string>>();
    List<ModalViewModel<Expense>> modalDetailList = new List<ModalViewModel<Expense>>();
    int pageData = Model.PaginationView.ChoosenPage;
    string keywordData = Model.PaginationView.SearchKeyword;
    int limitData = Model.PaginationView.LimitData;
    string orderData = Model.PaginationView.Order;
    string actionUrl = $"{baseUrl}{UriPath.EXPENSE_LIST}";
}

<h4 class="text-center my-3"><b>@ViewData["Title"]</b></h4>

@await Html.PartialAsync(
    "~/Views/Shared/Components/PageComponents/SearchBarWithAddData.cshtml", 
    new SearchBarWithAddData(
        UriPath.EXPENSE_LIST,
        keywordData,
        $"{baseUrl}{UriPath.EXPENSE_CREATE}"
    )
)

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th class="align-middle">
                    <div class="d-flex justify-content-center align-items-center">
                        <span class="mr-1">Tanggal</span>
                        @await Html.PartialAsync("~/Views/Shared/Components/SortingButton.cshtml",
                            new Sorting($"{actionUrl}?page={pageData}&limit={limitData}&keyword={keywordData}", OrderConstants.ORDER_BY_DATE, orderData)
                        )
                    </div>
                </th>
                <th class="align-middle">
                    <div class="d-flex justify-content-center align-items-center">
                        <span class="mr-1">Nama pengeluaran</span>
                        @await Html.PartialAsync("~/Views/Shared/Components/SortingButton.cshtml",
                            new Sorting($"{actionUrl}?page={pageData}&limit={limitData}&keyword={keywordData}", OrderConstants.ORDER_BY_NAME, orderData)
                        )
                    </div>
                    
                </th>
                <th class="align-middle">
                    <div class="d-flex justify-content-center align-items-center">
                        <span class="mr-1">Biaya</span>
                        @await Html.PartialAsync("~/Views/Shared/Components/SortingButton.cshtml",
                            new Sorting($"{actionUrl}?page={pageData}&limit={limitData}&keyword={keywordData}", OrderConstants.ORDER_BY_MONEY, orderData)
                        )
                    </div>
                </th>
                <th class="text-center align-middle">
                    Tipe
                </th>
                <th class="text-center align-middle">
                    Detail
                </th>
                <th class="text-center align-middle">Aksi</th>
            </tr>
        </thead>
        @if (Model.Data.Count != 0) 
        {
            <tbody>    
                @foreach (Expense Expense in Model.Data) 
                {;
                    string modalDeleteId = $"modalDelete{Expense.Id}";
                    string modalDetailId = $"modalDetail{Expense.Id}";
                    modalDeleteList.Add(new ModalViewModel<string>(
                        modalDeleteId, $"/expense/delete/{Expense.Id}", "hapus pengeluaran"
                    )); 
                    modalDetailList.Add(new ModalViewModel<Expense>(
                        modalDetailId, data: Expense
                    ));
                    <tr>
                        <td class="align-middle text-center">
                            @Html.DisplayFor(modelItem => Expense.CreatedAt, "DateTime")
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => Expense.Name)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => Expense.Cost, "Money")
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => Expense.CostType)
                        </td>
                        <td class="align-middle">
                            <div class="container">
                                <div class="row align-items-center justify-content-center">
                                    <button type="button" onclick="openModal('@modalDetailId')" class="btn btn-success">Detail</button>
                                </div>
                            </div>
                        </td>
                        <td class="align-middle">
                            <div class="container">
                                <div class="row align-items-center justify-content-center">
                                    <button type="button" onclick="openModal('@modalDeleteId')" class="btn btn-danger mx-1 my-1">Hapus</button>
                                    <a class="btn btn-primary mx-1 my-1" href="@baseUrl/expense/update/@Expense.Id">Ubah</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        } 
    </table>
</div>

@if (Model.Data.Count == 0)
{
    @await Html.PartialAsync("~/Views/Shared/Components/PageComponents/EmptyDataView.cshtml");
} else
{
    @await Html.PartialAsync("~/Views/Shared/Components/PageComponents/PaginationView.cshtml", Model.PaginationView)

    <div class="d-flex justify-content-center align-items-center row row-cols-2 my-3">
        <a class="btn btn-primary" href="@baseUrl/file/generate-excel/expense" download>
            <i class="bi bi-download"></i>
            Tabel Excel
        </a>
    </div>
    for (int i = 0; i < modalDetailList.Count; i++)
    {
        @await Html.PartialAsync("~/Views/Shared/Components/Modal/DeleteConfirmationModalView.cshtml", modalDeleteList[i]);
        @await Html.PartialAsync("~/Views/Expense/DetailExpenseModal.cshtml", modalDetailList[i]);
    }
}

<script>
    setupPopover()
</script>