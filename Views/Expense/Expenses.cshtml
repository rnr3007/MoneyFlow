@model MoneyFlow.Models.TableViewModel<Expense>;
@using MoneyFlow.Models;
@using MoneyFlow.Data;

@{
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
    List<ModalViewModel<string>> modalDeleteList = new List<ModalViewModel<string>>();
    List<ModalViewModel<Expense>> modalDetailList = new List<ModalViewModel<Expense>>();
}

<h4 class="text-center my-3"><b>@ViewData["Title"]</b></h4>

<div class="d-flex align-items-center mt-2 mb-1">
    <div>Cari pengeluaran:</div>
    <div class="col d-flex flex-grow-1">
        <form action="/expenses" method="get" class="d-flex flex-grow-1 mb-0">
            <input type="text" name="keyword" value="@ViewData["keyword"]" placeholder="Cari..." class="flex-grow-1 m-1">
            <button type="submit" class="btn btn-primary m-1"><i class="bi bi-search mr-1"></i>Cari</button>
        </form>
    </div>
    <div class="d-flex">
        <form action="/expense/create" method="get" class="mb-0">
            <button type="submit" class="btn btn-success"><i class="bi bi-plus-lg mr-1"></i>Buat baru</button>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th class="text-center">
                Nama pengeluaran
            </th>
            <th class="text-center">
                Tipe
            </th>
            <th class="text-center">
                Biaya
            </th>
            <th class="text-center">
                Detail
            </th>
            <th class="text-center">Aksi</th>
        </tr>
    </thead>
    @if (Model.Data.Count != 0) 
    {
        <tbody>    
            @foreach (Expense Expense in Model.Data) 
            {;
                string modalDeleteId = $"modalDelete{Expense.Id}";
                string modalDetailId = $"modalDetail{Expense.Id}";
                modalDeleteList.Add(new ModalViewModel<string>(
                    modalDeleteId, $"/expense/delete/{Expense.Id}", "hapus pengeluaran"
                )); 
                modalDetailList.Add(new ModalViewModel<Expense>(
                    modalDetailId, data: Expense
                ));
                <tr>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => Expense.Name)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => Expense.CostType)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => Expense.Cost, "Money")
                    </td>
                    <td>
                        <div class="container">
                            <div class="row align-items-center justify-content-center">
                                <button type="button" onclick="openModal('@modalDetailId')" class="btn btn-success">Detail</button>
                            </div>
                        </div>
                    </td>
                    <td class="row justify-content-center align-middle">
                        <button type="button" onclick="openModal('@modalDeleteId')" class="btn btn-danger">Hapus</button>
                        <form action="/expense/update/@Expense.Id" method="get" class="mb-0">
                            <div class="form-group flex-grow-1 ml-1 my-0">
                                <input type="submit" value="Ubah" class="btn btn-primary" />
                            </div>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    } 
</table>
@if (Model.Data.Count == 0)
{
    @await Html.PartialAsync("~/Views/Shared/Components/EmptyDataView.cshtml");
} else
{
    @await Html.PartialAsync("~/Views/Shared/Components/PaginationView.cshtml", Model.PaginationView)

    <div class="d-flex justify-content-center align-items-center row row-cols-2 my-3">
        <a class="btn btn-primary" href="@baseUrl/file/generate-excel/expense" download>
            <i class="bi bi-download"></i>
            Tabel Excel
        </a>
    </div>
    for (int i = 0; i < modalDetailList.Count; i++)
    {
        @await Html.PartialAsync("~/Views/Shared/Components/Modal/DeleteConfirmationModalView.cshtml", modalDeleteList[i]);
        @await Html.PartialAsync("~/Views/Expense/DetailExpenseModal.cshtml", modalDetailList[i]);
    }
}
