@model MoneyFlow.Models.TableViewModel<Income>;
@using MoneyFlow.Models;
@using MoneyFlow.Constants
@using MoneyFlow.Data;

@{
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}";
    List<ModalViewModel<string>> modalDeleteList = new List<ModalViewModel<string>>();
}

<h4 class="text-center my-3"><b>@ViewData["Title"]</b></h4>

<div class="container p-0 m-0">
    <div class="d-flex align-items-center mt-2 mb-1">
        <div class="hide-component">Cari barang:</div>
        <div class="col d-flex flex-grow-1 mx-0">
            <form action="@UriPath.INCOMES" method="get" class="d-flex flex-grow-1 mb-0">
                <input type="text" name="keyword" value="@ViewData["keyword"]" placeholder="Cari..." class="m-0 flex-grow-1">
                <button type="submit" class="btn btn-primary my-0 mx-2"><i class="bi bi-search mr-1"></i>Cari</button>
                <a href="@baseUrl@UriPath.INCOMES_CREATE" class="btn btn-success m-0"><i class="bi bi-plus-lg mr-1"></i>Buat baru</a>
            </form>
        </div>
    </div>
</div>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th class="text-center">
                    Pemasukan
                </th>
                <th class="text-center">
                    Tipe pemasukan
                </th>
                <th class="text-center">Aksi</th>
            </tr>
        </thead>
        @if (Model.Data.Count != 0) 
        {
            <tbody>    
                @foreach (Income Income in Model.Data) 
                {;
                    string modalDeleteId = $"modalDelete{Income.Id}";
                    string modalDetailId = $"modalDetail{Income.Id}";
                    modalDeleteList.Add(new ModalViewModel<string>(
                        modalDeleteId, $"/incomes/delete/{Income.Id}", "hapus pengeluaran"
                    ));
                    <tr>
                        <td class="align-middle text-center">
                            @Html.DisplayFor(modelItem => Income.IncomeMoney, "Money")
                        </td>
                        <td class="align-middle text-center">
                            @Html.DisplayFor(modelItem => Income.IncomeType)
                        </td>
                        <td class="align-middle">
                            <div class="container">
                                <div class="row align-items-center justify-content-center">
                                    <button type="button" onclick="openModal('@modalDeleteId')" class="btn btn-danger my-1 mx-1">Hapus</button>
                                    <a class="btn btn-primary my-1 mx-1" href="@baseUrl/incomes/update/@Income.Id">Ubah</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        } 
    </table>
</div>

@if (Model.Data.Count == 0)
{
    @await Html.PartialAsync("~/Views/Shared/Components/EmptyDataView.cshtml");
} else
{
    @await Html.PartialAsync("~/Views/Shared/Components/PaginationView.cshtml", Model.PaginationView)

    <div class="d-flex justify-content-center align-items-center row row-cols-2 my-3">
        <a class="btn btn-primary" href="@baseUrl/file/generate-excel/incomes" download>
            <i class="bi bi-download"></i>
            Tabel Excel
        </a>
    </div>
    for (int i = 0; i < modalDeleteList.Count; i++)
    {
        @await Html.PartialAsync("~/Views/Shared/Components/Modal/DeleteConfirmationModalView.cshtml", modalDeleteList[i]);
    }
}
